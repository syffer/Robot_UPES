package transform.rajan;


import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.Raster;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet; 
import java.util.Scanner;
import java.util.Set;

import javax.imageio.ImageIO;
import transform.rajan.*;


public class Application {

	public static void main(String[] args) {
		
		
		try {
			
			ArrayList<Set<Integer>> sequences = getSequencesFromImage("./images/lena.jpg");
			
	        System.out.println("The original sequences are : " + sequences);
	        
	        ArrayList<Set<Integer>> tranformedSequences = Rajan.forward(sequences);
			System.out.println("The tranformed sequences are : " + tranformedSequences);	
			
			
		} catch (IOException e1) { 
			e1.printStackTrace();		
		} catch (RajanException e) {
			//System.out.println(e.getMessage());
			e.printStackTrace();
		}
		
	}
	
	public static ArrayList<Set<Integer>> getUserSequences() {
		Scanner reader = new Scanner(System.in);
		
		System.out.print("Please, entre the number of samples (a power of 2): ");
		int nbSequences = reader.nextInt();
		
		ArrayList<Set<Integer>> sequences = new ArrayList<Set<Integer>>(nbSequences);
		
		// flush 
		reader.nextLine();
		
		for(int i = 0; i < nbSequences; i++) {
			System.out.print("Elements ");
			
			String line = reader.nextLine();
			String[] values = line.split(" ");
			
			HashSet<Integer> sequence = new HashSet<Integer>();
			
			for(String value : values) {
				sequence.add(Integer.parseInt(value));
			}
			
			sequences.add(sequence);
		}
		
		reader.close();
		
		return sequences;
	}
	
	private static ArrayList<Set<Integer>> getTestSequences() {

		ArrayList<Set<Integer>> sequences = new ArrayList<Set<Integer>>();
		
		sequences.add(new HashSet<Integer>(Arrays.asList(1, 2)));
		sequences.add(new HashSet<Integer>(Arrays.asList(3, 4, 6)));
		sequences.add(new HashSet<Integer>(Arrays.asList(4, 5)));
		sequences.add(new HashSet<Integer>(Arrays.asList(1, 5)));
		sequences.add(new HashSet<Integer>(Arrays.asList(1, 4, 5)));
		sequences.add(new HashSet<Integer>(Arrays.asList(3 ,4, 5)));
		sequences.add(new HashSet<Integer>(Arrays.asList(2, 6)));
		sequences.add(new HashSet<Integer>(Arrays.asList(1, 4, 6)));
		
		return sequences;
	}
	
	
	private static ArrayList<Set<Integer>> getSequencesFromImage(String pathToImage) throws IOException {
		
		// http://stackoverflow.com/questions/30784470/reading-an-image-into-an-array-of-pixels-and-then-writing-back-to-a-file 
		File imageFile = new File(pathToImage);
		BufferedImage image = ImageIO.read(imageFile);

		int width = image.getWidth();
        int height = image.getHeight();

        Raster raster = image.getData();
		
        //DataBufferByte data = (DataBufferByte) image.getRaster().getDataBuffer();
        //byte[] byteArray = data.getData();        
        //int[] array = raster.getPixels(0, 0, width, height, new int[byteArray.length]); 
        
        ArrayList<Set<Integer>> sequences = new ArrayList<Set<Integer>>(height);
        
        for(int i = 0; i < height; i++) {
        	
        	HashSet<Integer> sequence = new HashSet<Integer>(width);
        	
        	// to take the line of pixel : raster.getPixels(x, y, width, height, new int[byteArray.length]); 
        	// width * 3, because getPixels will return 3 values (RGB) for each pixels 
        	int[] array = raster.getPixels(0, i, width, 1, new int[width*3]); 
            
        	for(int value : array) {
        		sequence.add(value);
        	}
        	
        	sequences.add(sequence);
        }
                       
        return sequences;
	}
	
}
