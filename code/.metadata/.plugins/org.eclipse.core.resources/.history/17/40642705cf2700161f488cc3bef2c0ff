package transform;

public class Complexe {
	
	public static final Complexe zero = new Complexe(0, 0);
	public static final Complexe one = new Complexe(1, 0);
	
	private int reel;
	private int image;
	
	public Complexe(int reel, int image) {
		this.reel = reel; 
		this.image = image;
	}
	
	
	
	
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + image;
		result = prime * result + reel;
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Complexe other = (Complexe) obj;
		if (image != other.image)
			return false;
		if (reel != other.reel)
			return false;
		return true;
	}





	public static Complexe neg(Complexe complexe) {
		return new Complexe(-complexe.reel, -complexe.image);
	}
	
	public static Complexe add(Complexe a, Complexe b) {
		return new Complexe(a.reel + b.reel, a.image + b.image);
	}
	
	public static Complexe sub(Complexe a, Complexe b) {
		return new Complexe(a.reel - b.reel, a.image - b.image);
	}
	
	public static Complexe mul(Complexe a, Complexe b) {
		return new Complexe(a.reel * b.reel - a.image * b.image, a.reel * b.image - a.image * b.reel);
	}
	
	
	
}
